[build-system]
requires = ["scikit-build-core<=0.9.9", "nanobind >=1.3.2", "typing-extensions", "setuptools"]
build-backend = "scikit_build_core.setuptools.build_meta"

[project]
name = "pysails"
dynamic = ["version"]
description = "Sails: Software for the Automated Identification of Linked Sugars"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    { name = "Jordan Dialpuri", email = "jordan.dialpuri@york.ac.uk" },
]
classifiers = [
    "License :: OSI Approved :: BSD License",
]
dependencies=[
    'tqdm',
    'gemmi',
    'numpy<2.0.0',
    'typing-extensions'
]

[tool.setuptools]
packages = ["sails"]
package-dir = {"" = "src"}
include-package-data = true

[tool.setuptools.package-data]
"sails" = ["src/sails/data/*.json", "src/sails/data/*.cif"]

[project.urls]
Homepage = "https://github.com/Dialpuri/Sails"

[project.scripts]
sails = "sails.glycosylate:run_cli"
pysails = "sails.glycosylate:run_python"
sails-snfg = "sails.snfg:run"
sails-compare = "sails.compare:run"
sails-find = "sails.find:run"
sails-test = "sails.test:run"
sails-wurcs = "sails.wurcs:run"
sails-morph = "sails.morph:run"

[tool.scikit-build]
# Protect the configuration against future changes in scikit-build-core
minimum-version = "0.4"

# Setuptools-style build caching in a local directory
build-dir = "build/{wheel_tag}"

# Build stable ABI wheels for CPython 3.12+
#wheel.py-api = "cp312"

#cmake.build-type = "Debug"


# Dynamically assign the project version from the __version__.py file
#[tool.setuptools.dynamic]
#version = {file = "src/sails/__ version__.py"}


[tool.cibuildwheel]
# Necessary to see build output from the actual compilation
build-verbosity = 1
before-all = "uname -a && pwd && ls"
skip = ["pp*"] # Skip  PyPy 3.8
archs = ["auto64"] # Only target 64 bit architectures

# Run pytest to ensure that the package was correctly built
#test-command = "pytest package/tests"
#test-requires = "pytest"

# Needed for full C++17 support
[tool.cibuildwheel.macos.environment]
MACOSX_DEPLOYMENT_TARGET = "10.14"
